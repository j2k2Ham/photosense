name: PhotoSense CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore
        run: dotnet restore PhotoSense.sln

      - name: Build
        run: dotnet build PhotoSense.sln --configuration Release --no-restore /warnaserror

      - name: Test with coverage
        run: >-
          dotnet test PhotoSense.sln
          --configuration Release
          --collect:"XPlat Code Coverage"
          --logger "trx;LogFileName=test-results.trx"

      - name: ReportGenerator (HTML)
        # Use literal block to run two commands sequentially without stray backslashes.
        run: |
          dotnet tool restore
          # Use cobertura output produced by XPlat collector under TestResults directory
          dotnet tool run reportgenerator "-reports:**/TestResults/*/coverage.cobertura.xml" -targetdir:coverage/report -reporttypes:HtmlSummary;lcov
        if: always()

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            **/test-results.trx
            coverage/**

  mutation-test:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore tools
        run: dotnet tool restore

      - name: Run Stryker
        run: >-
          dotnet tool run stryker --config-file stryker-config.json

      - name: Upload Stryker Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mutation-report
          path: StrykerOutput/**
